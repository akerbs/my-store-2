import React, { useContext, useState, useEffect } from "react"
import Button from "@material-ui/core/Button"
import Card from "@material-ui/core/Card"
import CardActionArea from "@material-ui/core/CardActionArea"
import CardActions from "@material-ui/core/CardActions"
import CardContent from "@material-ui/core/CardContent"
import CardMedia from "@material-ui/core/CardMedia"
import Typography from "@material-ui/core/Typography"
import { useShoppingCart, formatCurrencyString } from "use-shopping-cart"
import { makeStyles } from "@material-ui/core/styles"
// import Link from "gatsby-plugin-transition-link"
import { Link } from "gatsby"
// import SnakeBar from "../SnakeBar"
// import { OldPrice } from "./OldPrice"
import { DrawerCartContext } from "../../context/DrawerCartContext"
import theme from "../theme"
// import { LanguageContext } from "../../context/LanguageContext"
import { LanguageContext } from "../../components/layout"
import inView from "in-view"
import Slide from "@material-ui/core/Slide"

import {
  ItemName,
  ItemDescription,
  // ProductPage,
  OldPrice,
  ImgLocal,
} from "./DB"

const useStyles = makeStyles({
  root: {
    maxWidth: 300,
    // maxHeight: 300,
    margin: 2,
    // marginBottom: "1rem",
    // padding: "1rem",
    transition: "0.3s linear",
    "&:hover": {
      boxShadow: " 0 0 10px rgba(0, 0, 0, 0.5)",
    },
  },

  link: {
    textDecoration: "none",
    color: theme.palette.primary.main,

    "&:active": {
      color: theme.palette.primary.dark,
    },
  },
  img: {
    transition: "1s",
    width: 300,
    height: 300,

    "&:hover": {
      transform: "scale(1.2)",
    },
  },
  btnAddToCart: {
    color: theme.palette.primary.main,
    "&:hover": {
      backgroundColor: theme.palette.primary.main,
      color: theme.palette.secondary.contrastText,
    },
  },
})

const SkuCard = ({ sku }, props) => {
  const classes = useStyles()
  const { addItem } = useShoppingCart()
  const { handleDrawerCartOpen } = useContext(DrawerCartContext)

  const { actLanguage } = useContext(LanguageContext)

  const [show, setShow] = useState(false)

  function startInView() {
    setShow(true)
  }
  function stopInView() {
    setShow(false)
  }

  useEffect(() => {
    inView(".selector").once("enter", startInView)
  })

  // const [openSnackbar, setOpenSnackbar] = useState(false)

  // const handleSnakebarShow = () => {
  //   setOpenSnackbar(true)
  // }
  // const handleSnakebarClose = (event, reason) => {
  //   if (reason === "clickaway") {
  //     return
  //   }
  //   setOpenSnackbar(false)
  // }

  const LinkToProductPage =
    sku.name === "Funny Bunny"
      ? "funny-bunny"
      : sku.name === "Cat Clock"
      ? "cat-clock"
      : sku.name === "Magic Hat"
      ? "magic-hat"
      : null

  return (
    <>
      <div style={{ overflow: "hidden" }} className="selector">
        <Slide in={show} timeout={700} direction="up">
          <div>
            <Card className={classes.root}>
              <Link
                // to={`/products/${ProductPage}`}
                to={`/products/${LinkToProductPage}`}
                className={classes.link}
                // style={{ textDecoration: "none", color: "tomato" }}
              >
                <CardActionArea>
                  <ImgLocal
                    sku={sku}
                    alt={<ItemName sku={sku} actLanguage={actLanguage} />}
                    className={classes.img}
                  />
                  <CardContent>
                    <Typography gutterBottom variant="h5">
                      <ItemName sku={sku} actLanguage={actLanguage} />
                    </Typography>
                    <Typography
                      variant="body2"
                      color="primary"
                      style={{ display: "inline" }}
                    >
                      <ItemDescription sku={sku} actLanguage={actLanguage} />
                      <br />
                      {actLanguage === "DEU"
                        ? "Preis"
                        : actLanguage === "RUS"
                        ? "Цена"
                        : actLanguage === "ENG"
                        ? "Price"
                        : "Price"}
                      :{" "}
                      <Typography
                        variant="body2"
                        color="textSecondary"
                        style={{ display: "inline" }}
                      >
                        {" "}
                        <OldPrice sku={sku} />
                      </Typography>{" "}
                      {formatCurrencyString({
                        value: parseInt(sku.price),
                        currency: sku.currency,
                      })}
                    </Typography>
                  </CardContent>
                </CardActionArea>
              </Link>
              <CardActions>
                <Button
                  className={classes.btnAddToCart}
                  variant="outlined"
                  fullWidth
                  size="small"
                  onClick={() => {
                    addItem(sku)
                    // handleSnakebarShow()
                    handleDrawerCartOpen()
                  }}
                >
                  {actLanguage === "DEU"
                    ? "IN DEN WARENKORB LEGEN"
                    : actLanguage === "RUS"
                    ? "ДОБАВИТЬ В КОРЗИНУ"
                    : actLanguage === "ENG"
                    ? "ADD TO CART"
                    : "ADD TO CART"}
                </Button>
              </CardActions>
            </Card>
            {/* 
      <SnakeBar
        open={openSnackbar}
        onClose={handleSnakebarClose}
        message="Item added into cart"
      /> */}
          </div>
        </Slide>
      </div>
    </>
  )
}

export default SkuCard









import React, { useContext, useState, useEffect } from "react"
import Button from "@material-ui/core/Button"
import Card from "@material-ui/core/Card"
import CardActionArea from "@material-ui/core/CardActionArea"
import CardActions from "@material-ui/core/CardActions"
import CardContent from "@material-ui/core/CardContent"
import CardMedia from "@material-ui/core/CardMedia"
import Typography from "@material-ui/core/Typography"
import { useShoppingCart, formatCurrencyString } from "use-shopping-cart"
import { makeStyles } from "@material-ui/core/styles"
// import Link from "gatsby-plugin-transition-link"
import { Link } from "gatsby"
// import SnakeBar from "../SnakeBar"
// import { OldPrice } from "./OldPrice"
import { DrawerCartContext } from "../../context/DrawerCartContext"
import theme from "../theme"
// import { LanguageContext } from "../../context/LanguageContext"
import { LanguageContext } from "../../components/layout"
import inView from "in-view"
import Slide from "@material-ui/core/Slide"
import Zoom from "@material-ui/core/Zoom"
import funnyBunny from "../../images/products/funny_bunny/funny_bunny_2.jpg"
import catClock from "../../images/products/cat_clock/cat_clock_1.jpg"
import magicHat from "../../images/products/magic_hat/magic_hat_1.jpg"

import {
  ItemName,
  ItemDescription,
  // ProductPage,
  OldPrice,
  ImgLocal,
} from "./DB"

const useStyles = makeStyles({
  root: {
    maxWidth: 300,
    maxHeight: 300,
    position: "relative",
    backgroundColor: "white",
    transition: "1s ease",
    overflow: "hidden",
    // transition: "0.3s linear",
    // "& $hoverImg": {
    //   position: "absolute",
    //   left: 0,
    //   top: 0,
    //   display: "none",
    // },
    "&:hover": {
      "& $imageInn": {
        display: "none",
      },
      "& $hoverImg": {
        display: "block",
        
      },
      // boxShadow: " 0 0 10px rgba(0, 0, 0, 0.5)",
      // "&  $img": {
      //   opacity: 0.3,
      // },
      "& $middle": {
        opacity: 1,
      },
    },
  },

  link: {
    textDecoration: "none",
    color: theme.palette.primary.main,

    "&:active": {
      color: theme.palette.primary.dark,
    },
  },
  imgInn: {
    margin: 0,
    padding: 0,
  },
  hoverImg: {
    position: "absolute",
    left: 0,
    top: 0,
    display: "none",

    margin: 0,
    padding: 0,
    transition: "1s ease",
    width: "100%",
    height: "auto",
    opacity: 1,
    backfaceVisibility: "hidden",

    // "&:hover": {
    //   transform: "scale(1.2)",
    // },
  },
  middle: {
    overflow: "hidden",
    transition: ".5s ease",
    opacity: 0,
    position: "absolute",
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)",
    textAlign: "center",
  },
  text: {
    color: "black",
    fontSize: 30,
    padding: "16px 32px",
  },

  btnAddToCart: {
    color: theme.palette.primary.main,
    "&:hover": {
      backgroundColor: theme.palette.primary.main,
      color: theme.palette.secondary.contrastText,
    },
  },
})

const SkuCard = ({ sku }, props) => {
  const classes = useStyles()
  const { addItem } = useShoppingCart()
  const { handleDrawerCartOpen } = useContext(DrawerCartContext)

  const { actLanguage } = useContext(LanguageContext)

  const [show, setShow] = useState(false)

  const [showOnHover, setShowOnHover] = useState(false)

  useEffect(() => {
    let card = document.getElementById("root")

    card.addEventListener(
      "mouseenter",
      function () {
        setShowOnHover(true)
      },
      true
    )

    card.addEventListener(
      "mouseover",
      function () {
        setShowOnHover(false)
      },
      true
    )
  }, [])

  console.log("TRUEORFALSE:", showOnHover)

  function startInView() {
    setShow(true)
  }
  function stopInView() {
    setShow(false)
  }

  useEffect(() => {
    inView(".selector").once("enter", startInView)
  })

  // const [openSnackbar, setOpenSnackbar] = useState(false)

  // const handleSnakebarShow = () => {
  //   setOpenSnackbar(true)
  // }
  // const handleSnakebarClose = (event, reason) => {
  //   if (reason === "clickaway") {
  //     return
  //   }
  //   setOpenSnackbar(false)
  // }

  const LinkToProductPage =
    sku.name === "Funny Bunny"
      ? "funny-bunny"
      : sku.name === "Cat Clock"
      ? "cat-clock"
      : sku.name === "Magic Hat"
      ? "magic-hat"
      : null

  return (
    <>
      {/* <div style={{ overflow: "hidden" }} className="selector">
        <Slide in={show} timeout={700} direction="up">
          <div> */}
      <Link
        // to={`/products/${ProductPage}`}
        to={`/products/${LinkToProductPage}`}
        className={classes.link}
        // style={{ textDecoration: "none", color: "tomato" }}
      >
        <div className={classes.root} id="root">
          {/* <CardActionArea> */}
          {/* <img src={funnyBunny} className={classes.img} /> */}

          <div className={classes.imageInn}>
            <img
              src={funnyBunny}
              // className={classes.img}
            />
          </div>
          {/* <Zoom in={showOnHover} timeout={500} direction="up"> */}
          <div className={classes.hoverImg}>
            <img src={magicHat} />
          </div>
          {/* </Zoom> */}

          <div className={classes.middle}>
            <Slide in={showOnHover} timeout={700} direction="up">
              <div className={classes.text}>TEXT </div>
            </Slide>
          </div>
          {/* <CardContent>
                    <Typography gutterBottom variant="h5">
                      <ItemName sku={sku.sku} actLanguage={actLanguage} />
                    </Typography>
                    <Typography
                      variant="body2"
                      color="primary"
                      style={{ display: "inline" }}
                    >
                      <ItemDescription
                        sku={sku.sku}
                        actLanguage={actLanguage}
                      />
                      <br />
                      {actLanguage === "DEU"
                        ? "Preis"
                        : actLanguage === "RUS"
                        ? "Цена"
                        : actLanguage === "ENG"
                        ? "Price"
                        : "Price"}
                      :{" "}
                      <Typography
                        variant="body2"
                        color="textSecondary"
                        style={{ display: "inline" }}
                      >
                        {" "}
                        <OldPrice sku={sku.sku} />
                      </Typography>{" "}
                      {formatCurrencyString({
                        value: parseInt(sku.price),
                        currency: sku.currency,
                      })}
                    </Typography>
                  </CardContent> */}
          {/* </CardActionArea> */}

          {/* <CardActions>
                <Button
                  className={classes.btnAddToCart}
                  variant="outlined"
                  fullWidth
                  size="small"
                  onClick={() => {
                    addItem(sku)
                    // handleSnakebarShow()
                    handleDrawerCartOpen()
                  }}
                >
                  {actLanguage === "DEU"
                    ? "IN DEN WARENKORB LEGEN"
                    : actLanguage === "RUS"
                    ? "ДОБАВИТЬ В КОРЗИНУ"
                    : actLanguage === "ENG"
                    ? "ADD TO CART"
                    : "ADD TO CART"}
                </Button>
              </CardActions> */}
        </div>
      </Link>
      {/* 
      <SnakeBar
        open={openSnackbar}
        onClose={handleSnakebarClose}
        message="Item added into cart"
      /> */}
      {/* </div>
        </Slide>
      </div> */}
    </>
  )
}

export default SkuCard
